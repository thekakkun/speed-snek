{"mappings":"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","sources":["src/scripts/geometry.ts","src/scripts/model.ts","src/scripts/graphics.ts","src/scripts/speedSnek.ts","src/scripts/main.ts"],"sourcesContent":["export interface Point {\n  x: number;\n  y: number;\n}\nexport interface Arc {\n  center: Point;\n  radius: number;\n}\nexport type Path = Point[];\n\nexport function dist(p1: Point, p2: Point): number {\n  return Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n}\n\n// Return intersection point if lines intersect, false if no intersection.\nexport function intersection(seg1: Path, arc: Arc): Point | false;\nexport function intersection(seg1: Path, seg2: Path): Point | false;\nexport function intersection(seg1: Path, seg2: Arc | Path): Point | false {\n  if (\"center\" in seg2) {\n    const [{ x: x1, y: y1 }, { x: x2, y: y2 }] = seg1;\n    const {\n      center: { x: xc, y: yc },\n      radius,\n    } = seg2;\n\n    const a = (x1 - x2) ** 2 + (y1 - y2) ** 2;\n    const b = (x1 - x2) * (x2 - xc) + (y1 - y2) * (y2 - yc);\n    const c = (x2 - xc) ** 2 + (y2 - yc) ** 2 - radius ** 2;\n\n    const discriminant = b ** 2 - a * c;\n    if (discriminant < 0) {\n      return false;\n    }\n\n    let t: number;\n    t = (-b - Math.sqrt(discriminant)) / a;\n\n    if (!(0 <= t && t <= 1)) {\n      // getting the other intersection\n      t = (-b + Math.sqrt(discriminant)) / a;\n    }\n    if (!(0 <= t && t <= 1)) {\n      // t still out of range? then no intersection.\n      return false;\n    }\n\n    return {\n      x: t * x1 + (1 - t) * x2,\n      y: t * y1 + (1 - t) * y2,\n    };\n  } else {\n    const [{ x: x1, y: y1 }, { x: x2, y: y2 }] = seg1;\n    const [{ x: x3, y: y3 }, { x: x4, y: y4 }] = seg2;\n\n    const t =\n      ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) /\n      ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n    if (!(0 <= t && t <= 1)) {\n      return false;\n    }\n\n    const u =\n      ((x1 - x3) * (y1 - y2) - (y1 - y3) * (x1 - x2)) /\n      ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n    if (!(0 <= u && u <= 1)) {\n      return false;\n    }\n\n    return {\n      x: x1 + t * (x2 - x1),\n      y: y1 + t * (y2 - y1),\n    };\n  }\n}\n","import { dist, intersection, Path, Point } from \"./geometry\";\nimport { Canvas } from \"./graphics\";\nimport { Go } from \"./speedSnek\";\n\nfunction randomBetween(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\ntype Notification = [\"pointermove\", Cursor] | [\"eatpellet\", Go];\n\ninterface Mediator {\n  notify(notification: Notification): void;\n}\n\n// events are sent here, and the mediator passes them on to the correct handler.\n// TODO: I don't think this is necessary anymore...\nexport class Model implements Mediator {\n  private snek: Snek;\n  private pellet: Pellet;\n\n  constructor(snek: Snek, pellet: Pellet) {\n    this.snek = snek;\n    this.snek.setMediator(this);\n    this.pellet = pellet;\n    this.pellet.setMediator(this);\n  }\n\n  public notify(notification: Notification): void {\n    const [event, sender] = notification;\n\n    switch (event) {\n      case \"pointermove\":\n        this.snek.calculateSegments();\n        this.snek.calculateSpeed();\n        break;\n\n      case \"eatpellet\":\n        this.snek.grow();\n        this.pellet.place(this.snek.segmentPath);\n        break;\n\n      default:\n        const _exhaustiveCheck: never = sender;\n        return _exhaustiveCheck;\n    }\n  }\n}\n\n// Components contain some sort of logic and can reference their mediators\n// Things in the game that have data that need updating.\nabstract class Component {\n  protected mediator: Mediator;\n\n  constructor(mediator?: Mediator) {\n    this.mediator = mediator!;\n  }\n\n  public setMediator(mediator: Mediator): void {\n    this.mediator = mediator;\n  }\n}\n\nexport class Cursor extends Component {\n  canvas: Canvas;\n  path: Path;\n  timeStamp: number[];\n  rawSpeed: number;\n\n  constructor(canvas: Canvas) {\n    super();\n    this.canvas = canvas;\n    this.path = [];\n    this.timeStamp = [];\n    this.rawSpeed = 0;\n    this.moveHandler = this.moveHandler.bind(this);\n  }\n\n  public moveHandler(e: PointerEvent) {\n    const point = {\n      x: e.x - this.canvas.element.getBoundingClientRect().x,\n      y: e.y - this.canvas.element.getBoundingClientRect().y,\n    };\n\n    this.path.unshift(point);\n    this.timeStamp.unshift(e.timeStamp);\n    this.mediator.notify([\"pointermove\", this]);\n  }\n\n  public trim(ix: number) {\n    this.path.splice(ix);\n    this.timeStamp.splice(ix);\n  }\n\n  public getSpeed(window = 6) {\n    window = Math.min(window, this.path.length - 1);\n    if (window < 2) {\n      return 0;\n    }\n\n    let travelled = 0;\n    let time = 0;\n    for (let i = 0; i < window; i++) {\n      travelled += dist(this.path[i], this.path[i + 1]);\n      time += this.timeStamp[i] - this.timeStamp[i + 1];\n    }\n\n    return travelled / time;\n  }\n\n  public updateSpeed() {\n    this.rawSpeed = this.getSpeed();\n  }\n}\n\nexport class Snek extends Cursor {\n  segments: number;\n  segLength: number;\n  segmentPath: Path;\n  snekWidth: number;\n  speed: number;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n\n    this.segments = 4;\n    this.segLength = 50;\n    this.snekWidth = 10;\n    this.speed = 0;\n    this.segmentPath = [\n      {\n        x: this.canvas.width / 2,\n        y: this.canvas.height / 2,\n      },\n    ];\n    for (let i = 0; i < this.segments; i++) {\n      const nextSeg = {\n        x: this.segmentPath[i].x,\n        y: this.segmentPath[i].y + this.segLength,\n      };\n\n      this.segmentPath.push(nextSeg);\n    }\n  }\n\n  public calculateSegments() {\n    Object.assign(this.segmentPath, this.path, { length: 1 });\n    let segHead = this.segmentPath[this.segmentPath.length - 1];\n    for (let [ix, p] of this.path.entries()) {\n      if (this.segmentPath.length <= this.segments) {\n        while (this.segLength < dist(segHead, p)) {\n          const seg = [this.path[ix - 1], p];\n          const arc = {\n            center: segHead,\n            radius: this.segLength,\n          };\n          segHead = intersection(seg, arc) as Point;\n          this.segmentPath.push(segHead);\n          if (this.segments < this.segmentPath.length) {\n            break;\n          }\n        }\n      } else {\n        if (this.segLength * 2 <= dist(segHead, p)) {\n          super.trim(ix);\n        }\n      }\n    }\n  }\n\n  public calculateSpeed() {\n    this.updateSpeed();\n\n    const alpha = 0.05;\n    if (this.rawSpeed !== NaN) {\n      this.speed = alpha * this.rawSpeed + (1 - alpha) * this.speed;\n    }\n  }\n\n  public grow() {\n    this.segments += 1;\n  }\n}\n\nexport class Pellet extends Component {\n  target: HTMLCanvasElement;\n  loc: Point;\n  radius: number;\n\n  constructor(target: HTMLCanvasElement) {\n    super();\n\n    this.radius = 15;\n    this.target = target;\n    this.loc = Object.create({});\n  }\n\n  // Choose random point within target until\n  // no walls or snek within buffer range\n  place(noGo: Path, buffer = 30) {\n    if (noGo !== undefined) {\n      noGo = noGo;\n    }\n\n    let loc: Point;\n    let locValid: boolean;\n\n    while (true) {\n      locValid = true;\n      loc = {\n        x: randomBetween(buffer, this.target.clientWidth - buffer),\n        y: randomBetween(buffer, this.target.clientHeight - buffer),\n      };\n\n      // loc is fine if there is no noGo\n      if (noGo.length === 0) {\n        this.loc = loc;\n        break;\n      }\n\n      // Check if loc within buffer distance of noGo path.\n      for (let i = 0; i < noGo.length - 1; i++) {\n        if (\n          intersection([noGo[i], noGo[i + 1]], {\n            center: loc,\n            radius: this.radius + buffer,\n          })\n        ) {\n          // loc is too close to noGo, try again.\n          locValid = false;\n          break;\n        }\n      }\n\n      if (locValid) {\n        Object.assign(this.loc!, loc);\n        // this.loc = loc;\n        break;\n      }\n    }\n  }\n}\n","import { Arc, Path, Point } from \"./geometry\";\nimport { SpeedSnek } from \"./speedSnek\";\n\nexport function gameSize(): [number, number] {\n  let width: number;\n  let height: number;\n\n  const ratio = 1.5;\n  const maxSide = 600;\n  const borderWidth = parseInt(\n    getComputedStyle(document.getElementById(\"game\") as HTMLElement).borderWidth\n  );\n\n  const dispHeight = document.documentElement.clientHeight;\n  const dispWidth = document.documentElement.clientWidth;\n\n  const uiHeight = document.getElementById(\"ui\")?.clientHeight as number;\n\n  if ((dispHeight - uiHeight) / dispWidth < 1) {\n    height = Math.min(maxSide, dispHeight - uiHeight - borderWidth * 2);\n    width = height * ratio;\n  } else {\n    width = Math.min(maxSide, dispWidth - borderWidth * 2);\n    height = width * ratio;\n  }\n\n  return [width, height];\n}\n\nexport class Canvas {\n  height: number;\n  width: number;\n  element: HTMLCanvasElement;\n  context: CanvasRenderingContext2D;\n\n  constructor(id: string, width?: number, height?: number) {\n    this.element = document.getElementById(id) as HTMLCanvasElement;\n    this.context = this.element.getContext(\"2d\") as CanvasRenderingContext2D;\n\n    if (width === undefined) {\n      width = this.element.clientWidth;\n    }\n    if (height === undefined) {\n      height = this.element.clientHeight;\n    }\n\n    this.width = width;\n    this.height = height;\n\n    this.setSize();\n  }\n\n  setSize() {\n    this.element.style.width = `${this.width}px`;\n    this.element.style.height = `${this.height}px`;\n\n    // Scale for high resolution displays\n    const dpr = window.devicePixelRatio;\n    this.element.width = Math.floor(this.width * dpr);\n    this.element.height = Math.floor(this.height * dpr);\n\n    // scale the output\n    this.context.scale(dpr, dpr);\n  }\n\n  clear() {\n    this.context.clearRect(0, 0, this.width, this.height);\n  }\n}\n\nabstract class Component {\n  protected parent!: Component | null;\n\n  public setParent(parent: Component | null) {\n    this.parent = parent;\n  }\n\n  public getParent(): Component | null {\n    return this.parent;\n  }\n\n  public abstract render(): void;\n}\n\nexport class Composite extends Component {\n  protected children: Component[] = [];\n\n  public add(component: Component) {\n    this.children.push(component);\n    component.setParent(this);\n  }\n\n  public remove(component: Component) {\n    const ix = this.children.indexOf(component);\n    this.children.splice(ix, 1);\n\n    component.setParent(null);\n  }\n\n  public render() {\n    for (const child of this.children) {\n      child.render();\n    }\n  }\n}\n\nabstract class GraphicsComponent<Type> extends Component {\n  public data: Type;\n  public target: CanvasRenderingContext2D;\n\n  constructor(data: Type, context: CanvasRenderingContext2D) {\n    super();\n    this.data = data;\n    this.target = context;\n  }\n}\n\nexport class CanvasLine extends GraphicsComponent<Path> {\n  color: string;\n  width: number;\n\n  constructor(\n    data: Path,\n    target: CanvasRenderingContext2D,\n    color: string,\n    width: number\n  ) {\n    super(data, target);\n    this.color = color;\n    this.width = width;\n  }\n\n  render() {\n    const path = this.data;\n\n    if (path.length !== 0) {\n      this.target.strokeStyle = this.color;\n      this.target.lineWidth = this.width;\n      this.target.lineCap = \"round\";\n      this.target.lineJoin = \"round\";\n      this.target.beginPath();\n      this.target.moveTo(path[0].x, path[0].y);\n      path.forEach((point: Point) => {\n        this.target.lineTo(point.x, point.y);\n      });\n      this.target.stroke();\n    }\n  }\n}\n\nexport class CanvasCircle extends GraphicsComponent<Arc> {\n  color: string;\n  width: number;\n\n  constructor(\n    data: Arc,\n    target: CanvasRenderingContext2D,\n    color: string,\n    width: number\n  ) {\n    super(data, target);\n    this.color = color;\n    this.width = width;\n  }\n\n  render() {\n    this.target.beginPath();\n    this.target.strokeStyle = this.color;\n    this.target.lineWidth = this.width;\n    this.target.arc(\n      this.data.center.x,\n      this.data.center.y,\n      this.data.radius,\n      0,\n      Math.PI * 2\n    );\n    this.target.stroke();\n  }\n}\n\nexport class CanvasDisc extends GraphicsComponent<Arc> {\n  color: string;\n\n  constructor(data: Arc, target: CanvasRenderingContext2D, color: string) {\n    super(data, target);\n    this.color = color;\n  }\n\n  render() {\n    if (this.data.center) {\n      this.target.fillStyle = this.color;\n      this.target.beginPath();\n      this.target.arc(\n        this.data.center.x,\n        this.data.center.y,\n        this.data.radius,\n        0,\n        Math.PI * 2\n      );\n      this.target.fill();\n    }\n  }\n}\n\nexport class CanvasRect extends GraphicsComponent<[Point, Point]> {\n  color: string;\n\n  constructor(\n    data: [Point, Point],\n    target: CanvasRenderingContext2D,\n    color: string\n  ) {\n    super(data, target);\n    this.color = color;\n  }\n\n  render() {\n    const rectStart = this.data[0];\n    const rectSize = {\n      x: this.data[1].x - rectStart.x,\n      y: this.data[1].y - rectStart.y,\n    };\n\n    this.target.fillStyle = this.color;\n    this.target.fillRect(rectStart.x, rectStart.y, rectSize.x, rectSize.y);\n  }\n}\n\nexport class SpeedGraphics extends GraphicsComponent<SpeedSnek> {\n  composite: Composite;\n\n  constructor(data: SpeedSnek, target: CanvasRenderingContext2D) {\n    super(data, target);\n    this.composite = new Composite();\n  }\n\n  render() {\n    // speedometer background\n    const speedCanvas = this.data.speedCanvas;\n    const background = new CanvasRect(\n      [\n        { x: 0, y: 0 },\n        { x: speedCanvas.width, y: speedCanvas.height },\n      ],\n      speedCanvas.context,\n      \"#eee\"\n    );\n\n    // speed limit\n    const speedLimit = new CanvasRect(\n      [\n        { x: 0, y: 0 },\n        {\n          x: (speedCanvas.width * this.data.speedLimit) / this.data.maxSpeed,\n          y: speedCanvas.height,\n        },\n      ],\n      speedCanvas.context,\n      \"orangered\"\n    );\n\n    // speed indicator\n    const indicator = new IndicatorGraphics(this.data, speedCanvas.context);\n\n    this.composite.add(background);\n    this.composite.add(speedLimit);\n    this.composite.add(indicator);\n\n    return this.composite.render();\n  }\n}\n\nexport class IndicatorGraphics extends GraphicsComponent<SpeedSnek> {\n  constructor(data: SpeedSnek, target: CanvasRenderingContext2D) {\n    super(data, target);\n  }\n\n  render() {\n    const speedCanvas = this.data.speedCanvas;\n    const speed = Math.min(this.data.snek.speed, this.data.maxSpeed);\n    const indicatorLoc = (speedCanvas.width * speed) / this.data.maxSpeed;\n\n    this.target.fillStyle = \"green\";\n    this.target.beginPath();\n    // left base\n    this.target.moveTo(indicatorLoc - 5, this.data.speedCanvas.height);\n    // right base\n    this.target.lineTo(indicatorLoc + 5, this.data.speedCanvas.height);\n    // right tip\n    this.target.lineTo(indicatorLoc + 1, 10);\n    // left tip\n    this.target.lineTo(indicatorLoc - 1, 10);\n    this.target.fill();\n  }\n}\n","import { Arc, dist, intersection } from \"./geometry\";\nimport { Model, Pellet, Snek } from \"./model\";\nimport {\n  Canvas,\n  CanvasCircle,\n  CanvasDisc,\n  CanvasLine,\n  Composite,\n  gameSize,\n  SpeedGraphics,\n} from \"./graphics\";\n\nexport class SpeedSnek {\n  // store current state\n  private state: State;\n\n  // game canvases\n  public speedCanvas: Canvas;\n  public gameCanvas: Canvas;\n  public reqId: number;\n\n  // game model\n  public model: Model;\n  public snek: Snek;\n  public pellet: Pellet;\n\n  // gameplay status\n  public score: number;\n  public bestScore: number;\n  public speedLimit: number;\n  public maxSpeed: number;\n\n  constructor() {\n    // initialize canvas\n    this.gameCanvas = new Canvas(\"gameBoard\", ...gameSize());\n    const uiElement = document.getElementById(\"ui\") as HTMLElement;\n    uiElement.style.width = `${this.gameCanvas.width}px`;\n    this.speedCanvas = new Canvas(\"speedometer\");\n\n    // initialize game objects\n    // this.cursor = new Cursor(this.gameCanvas.element);\n    this.snek = new Snek(this.gameCanvas);\n    this.pellet = new Pellet(this.gameCanvas.element);\n    this.model = new Model(this.snek, this.pellet);\n\n    // initialize game state\n    this.score = 0;\n    const bestScore = localStorage.getItem(\"bestScore\");\n    this.bestScore = bestScore ? Number(bestScore) : 0;\n    this.speedLimit = 0;\n    this.maxSpeed = 5;\n\n    // Start on title screen\n    this.transitionTo(new Title());\n  }\n\n  public transitionTo(state: State): void {\n    console.log(`Context: Transition to ${(<any>state).constructor.name}.`);\n    if (this.state) {\n      this.state.exit();\n    }\n\n    this.state = state;\n    this.state.setContext(this);\n\n    this.state.enter();\n  }\n\n  public increaseScore() {\n    this.score += 1;\n    this.bestScore = Math.max(this.bestScore, this.score);\n    this.speedLimit = Math.min(this.speedLimit + 0.05, this.maxSpeed);\n  }\n\n  public restart() {\n    this.snek = new Snek(this.gameCanvas);\n    this.pellet = new Pellet(this.gameCanvas.element);\n    this.model = new Model(this.snek, this.pellet);\n\n    this.score = 0;\n    const bestScore = localStorage.getItem(\"bestScore\");\n    this.bestScore = bestScore ? Number(bestScore) : 0;\n    this.speedLimit = 0;\n    this.maxSpeed = 5;\n  }\n\n  public gameLoop() {\n    this.update();\n    this.render();\n    this.reqId = requestAnimationFrame(() => this.gameLoop());\n  }\n\n  public update(): void {\n    const currentScore = document.getElementById(\"currentScore\") as HTMLElement;\n    currentScore.innerHTML = `Score: ${String(this.score).padStart(2, \"\\xa0\")}`;\n\n    const bestScore = document.getElementById(\"bestScore\") as HTMLElement;\n    bestScore.innerHTML = `Best: ${String(this.bestScore).padStart(2, \"\\xa0\")}`;\n    this.state.update();\n  }\n\n  public render(): void {\n    this.gameCanvas.clear();\n    this.speedCanvas.clear();\n    this.state.graphics.render();\n  }\n}\n\nabstract class State {\n  public game: SpeedSnek;\n  public graphics: Composite;\n\n  messageElement: HTMLElement;\n\n  constructor(graphics = new Composite()) {\n    this.graphics = graphics;\n    this.messageElement = document.getElementById(\"message\") as HTMLElement;\n  }\n\n  public setContext(game: SpeedSnek) {\n    this.game = game;\n  }\n\n  public abstract enter(): void;\n  public update(): void {}\n  public abstract exit(): void;\n}\n\n// Display game instructions, show start button\nexport class Title extends State {\n  constructor() {\n    super();\n  }\n\n  public enter(): void {\n    const info = document.getElementById(\"info\") as HTMLElement;\n    info.style.display = \"flex\";\n    const startMessage = document.getElementById(\"startMessage\") as HTMLElement;\n    startMessage.style.display = \"block\";\n    const endMessage = document.getElementById(\"endMessage\") as HTMLElement;\n    endMessage.style.display = \"none\";\n\n    // Add a click listener to the start button\n    // Transition to Ready state when clicked\n    const startButton = document.getElementById(\n      \"startButton\"\n    ) as HTMLButtonElement;\n\n    startButton.addEventListener(\n      \"click\",\n      () => this.game.transitionTo(new Ready()),\n      { once: true }\n    );\n  }\n\n  public exit(): void {\n    const info = document.getElementById(\"info\") as HTMLElement;\n    info.style.display = \"none\";\n  }\n}\n\n// UI and snek are live, ready for user input\nexport class Ready extends State {\n  readyArea!: Arc;\n  readyAreaGraphics!: CanvasCircle;\n\n  constructor() {\n    super();\n    this.checkPlayerReady = this.checkPlayerReady.bind(this);\n  }\n\n  public enter(): void {\n    this.messageElement.innerText = \"Pointer in the circle to start\";\n    this.initUiGraphics();\n    this.initGameGraphics();\n    document.addEventListener(\"pointermove\", this.checkPlayerReady);\n  }\n\n  initUiGraphics() {\n    const speedCanvas = this.game.speedCanvas;\n    const speedContext = speedCanvas.context;\n\n    const speedGraphics = new SpeedGraphics(this.game, speedContext);\n\n    this.graphics.add(speedGraphics);\n  }\n\n  initGameGraphics() {\n    const gameCanvas = this.game.gameCanvas;\n    const gameContext = this.game.gameCanvas.context;\n\n    const snek = this.game.snek;\n\n    const gameGraphics = new Composite();\n    const snekLine = new CanvasLine(\n      snek.segmentPath,\n      gameContext,\n      \"green\",\n      snek.snekWidth\n    );\n\n    // draw cursor line (if in dev mode) and snek\n    if (process.env.NODE_ENV === \"development\") {\n      const cursorLine = new CanvasLine(snek.path, gameContext, \"red\", 1);\n      gameGraphics.add(cursorLine);\n    }\n    gameGraphics.add(snekLine);\n    this.graphics.add(gameGraphics);\n\n    // draw circle for starting area\n    this.readyArea = {\n      center: { x: gameCanvas.width / 2, y: gameCanvas.height / 2 },\n      radius: 30,\n    };\n    this.readyAreaGraphics = new CanvasCircle(\n      this.readyArea,\n      gameContext,\n      \"blue\",\n      5\n    );\n    this.graphics.add(this.readyAreaGraphics);\n  }\n\n  checkPlayerReady(e: PointerEvent) {\n    const gameCanvas = this.game.gameCanvas;\n    const gameWrapper = gameCanvas.element.parentElement as HTMLElement;\n\n    const cursor = {\n      x: e.x - gameWrapper.offsetLeft - gameWrapper.clientLeft,\n      y: e.y - gameWrapper.offsetTop - gameWrapper.clientTop,\n    };\n\n    if (dist(cursor, this.readyArea.center) < this.readyArea.radius) {\n      this.game.transitionTo(new Set(this.graphics));\n    }\n  }\n\n  public exit(): void {\n    document.removeEventListener(\"pointermove\", this.checkPlayerReady);\n    this.graphics.remove(this.readyAreaGraphics);\n  }\n}\n\n// UI and snek are live, showing countdown\nexport class Set extends State {\n  startTime: number;\n\n  constructor(graphics: Composite) {\n    super(graphics);\n    this.startTime = Date.now();\n  }\n\n  public enter(): void {\n    const snek = this.game.snek;\n    document.addEventListener(\"pointermove\", snek.moveHandler);\n    document.addEventListener(\"touchend\", this.touchCheck, {\n      once: true,\n    });\n  }\n\n  update() {\n    const countStart = 3;\n    const elapsed = (Date.now() - this.startTime) / 1000;\n\n    this.messageElement.innerText = String(countStart - Math.floor(elapsed));\n\n    if (countStart < elapsed) {\n      this.game.transitionTo(new Go(this.graphics));\n    }\n  }\n\n  touchCheck() {\n    document.removeEventListener(\"pointermove\", this.game.snek.moveHandler);\n    this.game.transitionTo(new Ready());\n  }\n\n  public exit(): void {\n    document.removeEventListener(\"touchend\", this.touchCheck);\n  }\n}\n\n// game is live\nexport class Go extends State {\n  constructor(graphics: Composite) {\n    super(graphics);\n  }\n\n  public enter(): void {\n    this.messageElement.innerHTML = \"GO!\";\n    setTimeout(() => {\n      this.messageElement.innerText = \"\";\n    }, 1000);\n\n    const pellet = this.game.pellet;\n    const snek = this.game.snek;\n    pellet.place(snek.segmentPath);\n\n    const gameContext = this.game.gameCanvas.context;\n    this.graphics.add(\n      new CanvasDisc(\n        { center: this.game.pellet.loc!, radius: this.game.pellet.radius },\n        gameContext,\n        \"blue\"\n      )\n    );\n  }\n\n  update() {\n    const snek = this.game.snek;\n    const snekPath = snek.segmentPath;\n    const cursorPath = snek.segmentPath;\n    const pellet = this.game.pellet;\n\n    // speed check\n    if (snek.speed < this.game.speedLimit) {\n      console.log(\"faster!\");\n      this.game.transitionTo(new GameOver(\"You were too slow!\"));\n    }\n\n    // snek vs. pellet collision\n    if (pellet.loc) {\n      if (\n        2 <= cursorPath.length &&\n        intersection([cursorPath[0], cursorPath[1]], {\n          center: pellet.loc,\n          radius: pellet.radius + snek.snekWidth / 2,\n        })\n      ) {\n        console.log(\"nom!\");\n        this.game.increaseScore();\n        this.game.model.notify([\"eatpellet\", this]);\n      }\n    }\n\n    // snek vs. wall collision\n    const gameElement = this.game.gameCanvas.element;\n    if (\n      snekPath[0].x - 1 <= 0 ||\n      gameElement.clientWidth - 1 <= snekPath[0].x ||\n      snekPath[0].y - 1 <= 0 ||\n      gameElement.clientHeight - 1 <= snekPath[0].y\n    ) {\n      console.log(\"whoops!\");\n      this.game.transitionTo(new GameOver(\"You crashed into a wall!\"));\n    }\n\n    // snek vs. snek collision\n    for (let i = 2; i < snekPath.length - 1; i++) {\n      if (\n        intersection([snekPath[0], snekPath[1]], [snekPath[i], snekPath[i + 1]])\n      ) {\n        console.log(\"ouch!\");\n        this.game.transitionTo(new GameOver(\"You crashed into yourself!\"));\n      }\n    }\n  }\n\n  public exit(): void {\n    document.removeEventListener(\"pointermove\", this.game.snek.moveHandler);\n  }\n}\n\n// Snek is dead :(\nexport class GameOver extends State {\n  reason: string;\n\n  constructor(reason: string) {\n    super();\n    this.reason = reason;\n  }\n\n  public enter(): void {\n    localStorage.setItem(\"bestScore\", String(this.game.bestScore));\n\n    const reasonElement = document.getElementById(\"reason\") as HTMLElement;\n    reasonElement.innerText = this.reason;\n    const scoreElement = document.getElementById(\"score\") as HTMLElement;\n    scoreElement.innerText = `Score: ${this.game.score}`;\n    const bestElement = document.getElementById(\"best\") as HTMLElement;\n    bestElement.innerText =\n      `Best: ${this.game.bestScore}` +\n      (this.game.score === this.game.bestScore ? \" (NEW BEST!)\" : \"\");\n\n    const info = document.getElementById(\"info\") as HTMLElement;\n    info.style.display = \"flex\";\n    const startMessage = document.getElementById(\"startMessage\") as HTMLElement;\n    startMessage.style.display = \"none\";\n    const endMessage = document.getElementById(\"endMessage\") as HTMLElement;\n    endMessage.style.display = \"block\";\n\n    const restartButton = document.getElementById(\n      \"restartButton\"\n    ) as HTMLButtonElement;\n\n    restartButton.addEventListener(\n      \"click\",\n      () => this.game.transitionTo(new Title()),\n      { once: true }\n    );\n  }\n\n  public exit(): void {\n    this.game.restart();\n  }\n}\n","import { SpeedSnek } from \"./speedSnek\";\n\nwindow.addEventListener(\"load\", () => {\n  let speedSnek = new SpeedSnek();\n  speedSnek.gameLoop();\n});\n"],"names":["$512903f9dc58181d$export$6c4a311cc157c764","p1","p2","Math","sqrt","x","y","$512903f9dc58181d$export$bc86dfbf7795668c","seg1","seg2","x1","y1","x2","y2","center","xc","yc","radius","a","b","discriminant","t","x11","y11","x21","y21","x3","y3","x4","y4","t1","u","$de1c67ad03edf268$var$randomBetween","min","max","random","$de1c67ad03edf268$export$a1edc412be3e1841","constructor","snek","pellet","this","setMediator","notify","notification","event","sender","calculateSegments","calculateSpeed","grow","place","segmentPath","$de1c67ad03edf268$var$Component","mediator","$de1c67ad03edf268$export$b6a79797ad180576","canvas","super","path","timeStamp","rawSpeed","moveHandler","bind","e","point","element","getBoundingClientRect","unshift","trim","ix","splice","getSpeed","window","length","travelled","time","i","updateSpeed","$de1c67ad03edf268$export$5d379a99196b5d4e","segments","segLength","snekWidth","speed","width","height","nextSeg","push","Object","assign","segHead","p","entries","$de1c67ad03edf268$export$8d468b1b2457c918","target","loc","create","noGo","buffer","locValid","clientWidth","clientHeight","$11f96767ac22f166$export$e5d96c10a4f7ae2f","borderWidth","parseInt","getComputedStyle","document","getElementById","dispHeight","documentElement","dispWidth","uiHeight","$11f96767ac22f166$export$8d01c972ee8b14a9","id","context","getContext","undefined","setSize","style","dpr","devicePixelRatio","floor","scale","clear","clearRect","$11f96767ac22f166$var$Component","setParent","parent","getParent","$11f96767ac22f166$export$43586241d9db0c6d","children","add","component","remove","indexOf","render","child","$11f96767ac22f166$var$GraphicsComponent","data","$11f96767ac22f166$export$12929c049f38ef60","color","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","moveTo","forEach","lineTo","stroke","$11f96767ac22f166$export$c286ce9e59146edc","arc","PI","$11f96767ac22f166$export$56d6048a90046ca9","fillStyle","fill","$11f96767ac22f166$export$10f697896bf5f41","rectStart","rectSize","fillRect","$11f96767ac22f166$export$472c2da4f0ac63e5","composite","speedCanvas","background","speedLimit","maxSpeed","indicator","$11f96767ac22f166$export$51ac6f6d9284c7e4","indicatorLoc","$8afd2f20f372f024$export$201ff456803fd722","gameCanvas","model","score","bestScore","localStorage","getItem","Number","transitionTo","$8afd2f20f372f024$export$f99233281efd08a0","state","console","log","name","exit","setContext","enter","increaseScore","restart","gameLoop","update","reqId","requestAnimationFrame","innerHTML","String","padStart","graphics","$8afd2f20f372f024$var$State","messageElement","game","display","addEventListener","$8afd2f20f372f024$export$7a3e25fda9bd3f90","once","checkPlayerReady","innerText","initUiGraphics","initGameGraphics","speedContext","speedGraphics","gameContext","gameGraphics","snekLine","readyArea","readyAreaGraphics","gameWrapper","parentElement","offsetLeft","clientLeft","offsetTop","clientTop","$8afd2f20f372f024$export$bdf4ff5a442cbbc5","removeEventListener","startTime","Date","now","touchCheck","elapsed","$8afd2f20f372f024$export$88743ac60c2d46df","setTimeout","snekPath","cursorPath","$8afd2f20f372f024$export$5b8da01f83922c02","gameElement","reason","setItem"],"version":3,"file":"index.3f025905.js.map"}