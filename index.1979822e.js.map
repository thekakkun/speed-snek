{"mappings":"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","sources":["src/scripts/graphics.ts","src/scripts/geometry.ts","src/scripts/model.ts","src/scripts/main.ts"],"sourcesContent":["import { Point } from \"./geometry\";\nimport { Cursor, Snek, Pellet, SpeedSnek } from \"./model\";\n\nabstract class Component {\n  protected parent!: Component | null;\n\n  public setParent(parent: Component | null) {\n    this.parent = parent;\n  }\n\n  public getParent(): Component | null {\n    return this.parent;\n  }\n\n  public abstract draw(): void;\n}\n\nexport class Composite extends Component {\n  protected children: Component[] = [];\n\n  public add(component: Component) {\n    this.children.push(component);\n    component.setParent(this);\n  }\n\n  public remove(component: Component) {\n    const ix = this.children.indexOf(component);\n    this.children.splice(ix, 1);\n\n    component.setParent(null);\n  }\n\n  public draw() {\n    for (const child of this.children) {\n      child.draw();\n    }\n  }\n}\n\nabstract class GraphicsComponent<Type> extends Component {\n  public data: Type;\n  public context: CanvasRenderingContext2D;\n\n  constructor(data: Type, context: CanvasRenderingContext2D) {\n    super();\n    this.data = data;\n    this.context = context;\n  }\n}\n\nexport class CursorGraphics extends GraphicsComponent<Cursor> {\n  constructor(data: Cursor, context: CanvasRenderingContext2D) {\n    super(data, context);\n  }\n\n  draw() {\n    if (this.data.path.length !== 0) {\n      this.context.strokeStyle = \"red\";\n      this.context.lineWidth = 1;\n      this.context.beginPath();\n      this.context.moveTo(this.data.path[0].x, this.data.path[0].y);\n      this.data.path.forEach((point: Point) => {\n        this.context.lineTo(point.x, point.y);\n      });\n      this.context.stroke();\n    }\n  }\n}\n\nexport class SnekGraphics extends GraphicsComponent<Snek> {\n  constructor(data: Snek, context: CanvasRenderingContext2D) {\n    super(data, context);\n  }\n\n  draw() {\n    this.context.strokeStyle = \"green\";\n    this.context.lineCap = \"round\";\n    this.context.lineJoin = \"round\";\n    this.context.lineWidth = this.data.snekWidth;\n    this.context.beginPath();\n    this.context.moveTo(this.data.path[0].x, this.data.path[0].y);\n    this.data.path.forEach((point: Point) => {\n      this.context.lineTo(point.x, point.y);\n    });\n    this.context.stroke();\n  }\n}\n\nexport class PelletGraphics extends GraphicsComponent<Pellet> {\n  constructor(data: Pellet, context: CanvasRenderingContext2D) {\n    super(data, context);\n  }\n\n  draw() {\n    this.context.fillStyle = \"blue\";\n    this.context.beginPath();\n    this.context.arc(\n      this.data.loc.x,\n      this.data.loc.y,\n      this.data.r,\n      0,\n      Math.PI * 2\n    );\n    this.context.fill();\n  }\n}\n\nexport class ScoreGraphics extends GraphicsComponent<SpeedSnek> {\n  constructor(data: SpeedSnek, context: CanvasRenderingContext2D) {\n    super(data, context);\n  }\n\n  draw() {\n    this.context.font = \"25px monospace\";\n    this.context.fillStyle = \"black\";\n    this.context.fillText(`Score: ${this.data.score}`, 0, 30);\n    this.context.fillText(` Best: ${this.data.maxScore}`, 0, 60);\n  }\n}\n\nexport class SpeedGraphics extends GraphicsComponent<Cursor> {\n  constructor(data: Cursor, context: CanvasRenderingContext2D) {\n    super(data, context);\n  }\n\n  draw() {\n    const padding = 10;\n    const meterStart = {\n      x: 160,\n      y: padding,\n    };\n    const meterSize = {\n      x: this.context.canvas.clientWidth - meterStart.x,\n      y: this.context.canvas.clientHeight - padding * 2,\n    };\n\n    // Speed meter background\n    this.context.fillStyle = \"#eee\";\n    this.context.fillRect(meterStart.x, meterStart.y, meterSize.x, meterSize.y);\n\n    // Speed limit line\n    this.context.fillStyle = \"orangeRed\";\n    this.context.fillRect(\n      meterStart.x,\n      meterStart.y,\n      (meterSize.x * this.data.speedLimit) / this.data.maxSpeed,\n      meterSize.y\n    );\n\n    // Speedometer needle\n    const speed = Math.min(this.data.smoothSpeed, this.data.maxSpeed);\n    this.context.fillStyle = \"green\";\n    this.context.beginPath();\n    this.context.moveTo(\n      (meterSize.x * speed) / this.data.maxSpeed - 5 + meterStart.x,\n      meterStart.y + meterSize.y\n    );\n    this.context.lineTo(\n      (meterSize.x * speed) / this.data.maxSpeed + 5 + meterStart.x,\n      meterStart.y + meterSize.y\n    );\n    this.context.lineTo(\n      (meterSize.x * speed) / this.data.maxSpeed + 1 + meterStart.x,\n      meterStart.y + 10\n    );\n    this.context.lineTo(\n      (meterSize.x * speed) / this.data.maxSpeed - 1 + meterStart.x,\n      meterStart.y + 10\n    );\n    this.context.fill();\n  }\n\n  scaleX(value: number) {\n    return (this.context.canvas.width * value) / this.data.maxSpeed;\n  }\n}\n","export interface Point {\n  x: number;\n  y: number;\n}\nexport interface Arc {\n  center: Point;\n  radius: number;\n}\nexport type Path = Point[];\n\nexport function dist(p1: Point, p2: Point): number {\n  return Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n}\n\n// Return intersection point if lines intersect, false if no intersection.\nexport function intersection(seg1: Path, arc: Arc): Point | false;\nexport function intersection(seg1: Path, seg2: Path): Point | false;\nexport function intersection(seg1: Path, seg2: Arc | Path): Point | false {\n  if (\"center\" in seg2) {\n    const [{ x: x1, y: y1 }, { x: x2, y: y2 }] = seg1;\n    const {\n      center: { x: xc, y: yc },\n      radius,\n    } = seg2;\n\n    const a = (x1 - x2) ** 2 + (y1 - y2) ** 2;\n    const b = (x1 - x2) * (x2 - xc) + (y1 - y2) * (y2 - yc);\n    const c = (x2 - xc) ** 2 + (y2 - yc) ** 2 - radius ** 2;\n\n    const discriminant = b ** 2 - a * c;\n    if (discriminant < 0) {\n      return false;\n    }\n\n    let t: number;\n    t = (-b - Math.sqrt(discriminant)) / a;\n\n    if (!(0 <= t && t <= 1)) {\n      // getting the other intersection\n      t = (-b + Math.sqrt(discriminant)) / a;\n    }\n    if (!(0 <= t && t <= 1)) {\n      // t still out of range? then no intersection.\n      return false;\n    }\n\n    return {\n      x: t * x1 + (1 - t) * x2,\n      y: t * y1 + (1 - t) * y2,\n    };\n  } else {\n    const [{ x: x1, y: y1 }, { x: x2, y: y2 }] = seg1;\n    const [{ x: x3, y: y3 }, { x: x4, y: y4 }] = seg2;\n\n    const t =\n      ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) /\n      ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n    if (!(0 <= t && t <= 1)) {\n      return false;\n    }\n\n    const u =\n      ((x1 - x3) * (y1 - y2) - (y1 - y3) * (x1 - x2)) /\n      ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n    if (!(0 <= u && u <= 1)) {\n      return false;\n    }\n\n    return {\n      x: x1 + t * (x2 - x1),\n      y: y1 + t * (y2 - y1),\n    };\n  }\n}\n","import { dist, intersection, Path, Point } from \"./geometry\";\n\nfunction randomBetween(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\ntype Notification =\n  | [\"pointermove\", Cursor]\n  | [\"trimpath\", Snek, number]\n  | [\"eatpellet\", Cursor]\n  | [\"hitself\", Cursor]\n  | [\"hitwall\", Cursor]\n  | [\"tooslow\", Cursor];\n\ninterface Mediator {\n  notify(notification: Notification): void;\n}\n\n// events are sent here, and the mediator passes them on to the correct handler.\nexport class ConcreteMediator implements Mediator {\n  public speedSnek: SpeedSnek;\n  private cursor: Cursor;\n  private snek: Snek;\n  private pellet: Pellet;\n\n  constructor(\n    speedSnek: SpeedSnek,\n    cursor: Cursor,\n    snek: Snek,\n    pellet: Pellet\n  ) {\n    this.speedSnek = speedSnek;\n    this.speedSnek.setMediator(this);\n    this.cursor = cursor;\n    this.cursor.setMediator(this);\n    this.snek = snek;\n    this.snek.setMediator(this);\n    this.pellet = pellet;\n    this.pellet.setMediator(this);\n  }\n\n  public notify(notification: Notification): void {\n    const [event, sender] = notification;\n\n    switch (event) {\n      case \"pointermove\":\n        this.snek.update(sender);\n        this.cursor.updateSpeed();\n        this.cursor.checkCollision(this.snek, this.pellet);\n        break;\n\n      case \"trimpath\":\n        const [, , ix] = notification;\n        this.cursor.trim(ix);\n        break;\n\n      case \"eatpellet\":\n        console.log(\"nom!\");\n        this.snek.grow();\n        this.speedSnek.increaseScore();\n        this.cursor.increaseSpeed();\n        this.pellet.place(this.snek.path);\n        break;\n\n      case \"hitself\":\n        console.log(\"ouch!\");\n        this.speedSnek.gameOver(...notification);\n        break;\n\n      case \"hitwall\":\n        console.log(\"whoops!\");\n        this.speedSnek.gameOver(...notification);\n        break;\n\n      case \"tooslow\":\n        console.log(\"faster!\");\n        this.speedSnek.gameOver(...notification);\n        break;\n\n      default:\n        const _exhaustiveCheck: never = sender;\n        return _exhaustiveCheck;\n    }\n  }\n}\n\n// Components contain some sort of logic and can reference their mediators\n// Things in the game that have data that need updating.\nabstract class Component {\n  protected mediator: Mediator;\n\n  constructor(mediator?: Mediator) {\n    this.mediator = mediator!;\n  }\n\n  public setMediator(mediator: Mediator): void {\n    this.mediator = mediator;\n  }\n}\n\nexport class SpeedSnek extends Component {\n  score: number;\n  maxScore: number;\n\n  constructor(score = 0) {\n    super();\n\n    this.score = score;\n    const maxScore = localStorage.getItem(\"maxScore\");\n    this.maxScore = maxScore ? Number(maxScore) : 0;\n  }\n\n  increaseScore() {\n    this.score += 1;\n    this.maxScore = Math.max(this.maxScore, this.score);\n  }\n\n  gameOver(reason: Notification[0], cursor: Cursor) {\n    const message = {\n      hitself: \"You crashed into yourself!\",\n      hitwall: \"You crashed into a wall!\",\n      tooslow: \"You were too slow!\",\n    };\n\n    localStorage.setItem(\"maxScore\", String(this.maxScore));\n\n    if (process.env.NODE_ENV === \"production\") {\n      document.removeEventListener(\"pointermove\", cursor.moveHandler);\n      alert(`Game Over!\\n${message[reason]}\\nYour score: ${this.score}`);\n      location.reload();\n    }\n  }\n}\n\nexport class Cursor extends Component {\n  target: HTMLCanvasElement;\n  path: Path;\n  timeStamp: number[];\n  speed: number;\n  smoothSpeed: number;\n  speedLimit: number;\n  speedIncrease: number;\n  maxSpeed: number;\n\n  constructor(target: HTMLCanvasElement) {\n    super();\n    this.target = target;\n    this.path = [];\n    this.timeStamp = [];\n    this.speed = 0;\n    this.smoothSpeed = 0;\n    this.speedLimit = 0;\n    this.speedIncrease = 0.05;\n    this.maxSpeed = 5;\n    this.moveHandler = this.moveHandler.bind(this);\n  }\n\n  public moveHandler(e: PointerEvent) {\n    const point = {\n      x: e.x - this.target.offsetLeft,\n      y: e.y - this.target.offsetTop,\n    };\n\n    this.path.unshift(point);\n    this.timeStamp.unshift(e.timeStamp);\n    this.mediator.notify([\"pointermove\", this]);\n  }\n\n  public trim(ix: number) {\n    this.path.splice(ix);\n    this.timeStamp.splice(ix);\n  }\n\n  updateSpeed() {\n    const alpha = 0.1;\n    this.speed = this.getSpeed();\n    if (this.speed !== NaN) {\n      this.smoothSpeed = alpha * this.speed + (1 - alpha) * this.smoothSpeed;\n    }\n\n    if (this.smoothSpeed < this.speedLimit) {\n      this.mediator.notify([\"tooslow\", this]);\n    }\n  }\n\n  increaseSpeed() {\n    this.speedLimit = Math.min(\n      this.speedLimit + this.speedIncrease,\n      this.maxSpeed\n    );\n  }\n\n  checkCollision(snek: Snek, pellet: Pellet) {\n    // snek vs pellet collisions\n    if (\n      2 <= this.path.length &&\n      intersection([this.path[0], this.path[1]], {\n        center: pellet.loc,\n        radius: pellet.r + snek.snekWidth / 2,\n      })\n    ) {\n      this.mediator.notify([\"eatpellet\", this]);\n    }\n\n    // // snek vs wall collisions\n    if (\n      this.path[0].x - 1 <= 0 ||\n      this.target.clientWidth - 1 <= this.path[0].x ||\n      this.path[0].y - 1 <= 0 ||\n      this.target.clientHeight - 1 <= this.path[0].y\n    ) {\n      this.mediator.notify([\"hitwall\", this]);\n    }\n\n    // snek vs snek collisions\n    for (let i = 2; i < snek.path.length - 1; i++) {\n      if (\n        intersection(\n          [snek.path[0], snek.path[1]],\n          [snek.path[i], snek.path[i + 1]]\n        )\n      ) {\n        this.mediator.notify([\"hitself\", this]);\n      }\n    }\n  }\n\n  public getSpeed(window = 6) {\n    window = Math.min(window, this.path.length - 1);\n    if (window < 2) {\n      return 0;\n    }\n\n    let travelled = 0;\n    let time = 0;\n    for (let i = 0; i < window; i++) {\n      travelled += dist(this.path[i], this.path[i + 1]);\n      time += this.timeStamp[i] - this.timeStamp[i + 1];\n    }\n\n    return travelled / time;\n  }\n}\n\nexport class Snek extends Component {\n  segments: number;\n  segLength: number;\n  path: Path;\n  snekWidth: number;\n\n  constructor(startLoc: Point, segments = 4, segLength = 50, snekWidth = 10) {\n    super();\n\n    this.path = [startLoc];\n    for (let i = 0; i < segments; i++) {\n      const nextSeg = {\n        x: this.path[i].x,\n        y: this.path[i].y + segLength,\n      };\n\n      this.path.push(nextSeg);\n    }\n\n    this.segments = segments;\n    this.segLength = segLength;\n    this.snekWidth = snekWidth;\n  }\n\n  public update(cursor: Cursor) {\n    const cursorPath = cursor.path;\n    this.path = [cursorPath[0]];\n    let segHead = this.path[this.path.length - 1];\n    for (let [ix, p] of cursorPath.entries()) {\n      if (this.path.length <= this.segments) {\n        while (this.segLength < dist(segHead, p)) {\n          const seg = [cursorPath[ix - 1], p];\n          const arc = {\n            center: segHead,\n            radius: this.segLength,\n          };\n          segHead = intersection(seg, arc) as Point;\n          this.path.push(segHead);\n          if (this.segments < this.path.length) {\n            break;\n          }\n        }\n      } else {\n        if (this.segLength * 2 <= dist(segHead, p)) {\n          this.mediator.notify([\"trimpath\", this, ix]);\n          break;\n        }\n      }\n    }\n  }\n\n  public grow() {\n    this.segments += 1;\n  }\n}\n\nexport class Pellet extends Component {\n  target: HTMLCanvasElement;\n  loc: Point;\n  r: number;\n\n  constructor(target: HTMLCanvasElement, noGo: Path, r = 15) {\n    super();\n\n    this.r = r;\n    this.target = target;\n    this.place(noGo);\n  }\n\n  // Choose random points within bb (bounding box) until no walls or snek\n  place(noGo: Path, buffer = 30) {\n    if (noGo !== undefined) {\n      noGo = noGo;\n    }\n\n    let loc: Point;\n    let locValid: boolean;\n\n    while (true) {\n      locValid = true;\n      loc = {\n        x: randomBetween(buffer, this.target.clientWidth - buffer),\n        y: randomBetween(buffer, this.target.clientHeight - buffer),\n      };\n\n      // Place is fine if there is no noGo\n      if (noGo.length === 0) {\n        this.loc = loc;\n        break;\n      }\n\n      // Check if pellet location within buffer distance of noGo path.\n      for (let i = 0; i < noGo.length - 1; i++) {\n        if (\n          intersection([noGo[i], noGo[i + 1]], {\n            center: loc,\n            radius: this.r + buffer,\n          })\n        ) {\n          // loc is too close to noGo, try again.\n          locValid = false;\n          break;\n        }\n      }\n\n      if (locValid) {\n        this.loc = loc;\n        break;\n      }\n    }\n  }\n}\n","import {\n  Composite,\n  CursorGraphics,\n  PelletGraphics,\n  ScoreGraphics,\n  SnekGraphics,\n  SpeedGraphics,\n} from \"./graphics\";\nimport { ConcreteMediator, Cursor, Snek, Pellet, SpeedSnek } from \"./model\";\n\nconst width = 512;\nconst gameHeight = 688;\nconst uiHeight = 80;\n\nconst gameCanvas = document.getElementById(\"game\") as HTMLCanvasElement;\nconst uiCanvas = document.getElementById(\"ui\") as HTMLCanvasElement;\nconst gameContext = gameCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\nconst uiContext = uiCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\ngameCanvas.style.width = `${width}px`;\ngameCanvas.style.height = `${gameHeight}px`;\nuiCanvas.style.width = `${width}px`;\nuiCanvas.style.height = `${uiHeight}px`;\n\nconst scale = window.devicePixelRatio;\ngameCanvas.width = Math.floor(width * scale);\ngameCanvas.height = Math.floor(gameHeight * scale);\nuiCanvas.width = Math.floor(width * scale);\nuiCanvas.height = Math.floor(uiHeight * scale);\n\ngameContext.scale(scale, scale);\nuiContext.scale(scale, scale);\n\nconst cursor = new Cursor(gameCanvas);\nconst snek = new Snek({\n  x: gameCanvas.clientWidth / 2,\n  y: gameCanvas.clientHeight / 2,\n});\nconst pellet = new Pellet(gameCanvas, snek.path);\nconst speedSnek = new SpeedSnek();\nconst mediator = new ConcreteMediator(speedSnek, cursor, snek, pellet);\n\nconst gameGraphics = new Composite();\nif (process.env.NODE_ENV === \"development\") {\n  gameGraphics.add(new CursorGraphics(cursor, gameContext));\n}\ngameGraphics.add(new SnekGraphics(snek, gameContext));\ngameGraphics.add(new PelletGraphics(pellet, gameContext));\n\nconst uiGraphics = new Composite();\nuiGraphics.add(new SpeedGraphics(cursor, uiContext));\nuiGraphics.add(new ScoreGraphics(speedSnek, uiContext));\n\nconst graphics = new Composite();\ngraphics.add(gameGraphics);\ngraphics.add(uiGraphics);\n\ndocument.addEventListener(\"pointermove\", cursor.moveHandler);\n\nfunction draw() {\n  gameContext.clearRect(0, 0, gameCanvas.width, gameCanvas.height);\n  uiContext.clearRect(0, 0, uiCanvas.width, uiCanvas.height);\n\n  graphics.draw();\n  requestAnimationFrame(draw);\n}\ndraw();\n"],"names":["$11f96767ac22f166$var$Component","setParent","parent","this","getParent","$11f96767ac22f166$export$43586241d9db0c6d","children","add","component","push","remove","ix","indexOf","splice","draw","child","$11f96767ac22f166$var$GraphicsComponent","constructor","data","context","super","$512903f9dc58181d$export$6c4a311cc157c764","p1","p2","Math","sqrt","x","y","$512903f9dc58181d$export$bc86dfbf7795668c","seg1","seg2","x1","y1","x2","y2","center","xc","yc","radius","a","b","discriminant","t","x11","y11","x21","y21","x3","y3","x4","y4","t1","u","$de1c67ad03edf268$var$randomBetween","min","max","random","$de1c67ad03edf268$var$Component","mediator","setMediator","$1ccc8d3c866b7484$var$gameCanvas","document","getElementById","$1ccc8d3c866b7484$var$uiCanvas","$1ccc8d3c866b7484$var$gameContext","getContext","$1ccc8d3c866b7484$var$uiContext","style","width","height","$1ccc8d3c866b7484$var$scale","window","devicePixelRatio","floor","scale","$1ccc8d3c866b7484$var$cursor","target","path","timeStamp","speed","smoothSpeed","speedLimit","speedIncrease","maxSpeed","moveHandler","bind","e","point","offsetLeft","offsetTop","unshift","notify","trim","updateSpeed","getSpeed","increaseSpeed","checkCollision","snek","pellet","length","loc","r","snekWidth","clientWidth","clientHeight","i","travelled","time","$1ccc8d3c866b7484$var$snek","startLoc","segments","segLength","nextSeg","update","cursor","cursorPath","segHead","p","entries","grow","$1ccc8d3c866b7484$var$pellet","noGo","place","buffer","locValid","$1ccc8d3c866b7484$var$speedSnek","score","maxScore","localStorage","getItem","Number","increaseScore","gameOver","reason","setItem","String","removeEventListener","alert","hitself","hitwall","tooslow","location","reload","$1ccc8d3c866b7484$var$gameGraphics","speedSnek","notification","event","sender","console","log","strokeStyle","lineCap","lineJoin","lineWidth","beginPath","moveTo","forEach","lineTo","stroke","fillStyle","arc","PI","fill","$1ccc8d3c866b7484$var$uiGraphics","meterStart","meterSize","canvas","padding","fillRect","scaleX","value","font","fillText","$1ccc8d3c866b7484$var$graphics","addEventListener","$1ccc8d3c866b7484$var$draw","clearRect","requestAnimationFrame"],"version":3,"file":"index.1979822e.js.map"}